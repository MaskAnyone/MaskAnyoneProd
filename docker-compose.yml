version: '3'

services:
  proxy:
    image: ghcr.io/maskanyone/maskanyone/proxy:${MASK_ANYONE_VERSION}
    ports:
      - "443:443"
    restart: "on-failure"

  frontend:
    image: ghcr.io/maskanyone/maskanyone/frontend:${MASK_ANYONE_VERSION}

  postgres:
    image: ghcr.io/maskanyone/maskanyone/postgres:${MASK_ANYONE_VERSION}
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${MASK_ANYONE_DB_USER}
      POSTGRES_PASSWORD: ${MASK_ANYONE_DB_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  keycloak:
    image: ghcr.io/maskanyone/maskanyone/keycloak:${MASK_ANYONE_VERSION}
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: ${MASK_ANYONE_KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${MASK_ANYONE_KC_ADMIN_PASSWORD}
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${MASK_ANYONE_DB_USER}
      KC_DB_PASSWORD: ${MASK_ANYONE_DB_PASSWORD}

  backend:
    image: ghcr.io/maskanyone/maskanyone/backend:${MASK_ANYONE_VERSION}
    depends_on:
      - postgres
    environment:
      BACKEND_PG_HOST: postgres
      BACKEND_PG_PORT: 5432
      BACKEND_PG_USER: ${MASK_ANYONE_DB_USER}
      BACKEND_PG_PASSWORD: ${MASK_ANYONE_DB_PASSWORD}
      BACKEND_PG_DATABASE: prototype
      BACKEND_AUTH_PUBLIC_KEY: ${MASK_ANYONE_KC_PUBLIC_KEY}

  worker-basic_masking:
    build:
      context: ./docker/worker
    depends_on:
      - backend
    environment:
      WORKER_TYPE: "basic_masking"
    mem_limit: ${MASK_ANYONE_BASIC_MEM_LIMIT}
    cpus: ${MASK_ANYONE_BASIC_CPUS}
    scale: ${MASK_ANYONE_BASIC_WORKER_COUNT}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
